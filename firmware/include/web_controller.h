#ifndef WEBCONTROLLER_H
#define WEBCONTROLLER_H

const char *web_html = "<!DOCTYPE html>\n"
"<html lang=\"en\">\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
"<title>Rotating Circle</title>\n"
"<style>\n"
"    body, html {\n"
"        height: 100%;\n"
"        margin: 0;\n"
"        display: flex;\n"
"        justify-content: center;\n"
"        align-items: center;\n"
"    }\n"
"    #circle {\n"
"        width: 200px;\n"
"        height: 200px;\n"
"        background-color: #575757;\n"
"        border-radius: 50%;\n"
"        display: flex;\n"
"        justify-content: center;\n"
"        align-items: center;\n"
"        color: white;\n"
"        font-size: 24px;\n"
"        font-family: Arial, sans-serif;\n"
"        position: relative;\n"
"        cursor: pointer;\n"
"    }\n"
"    #line {\n"
"        width: 2px;\n"
"        height: 30%;\n"
"        background-color: rgb(191, 0, 0);\n"
"        position: absolute;\n"
"        top: 0;\n"
"        left: 50%;\n"
"    }\n"
"</style>\n"
"</head>\n"
"<body>\n"
"\n"
"<div id=\"circle\">\n"
"    <div id=\"line\"></div>\n"
"</div>\n"
"\n"
"<script>\n"
"    const circle = document.getElementById('circle');\n"
"    const line = document.getElementById('line');\n"
"    let isMouseDown = false;\n"
"    let prevAngle = 0;\n"
"    let currentRotation = 0;\n"
"\n"
"    // Function to calculate angle between two points\n"
"    function getAngle(center, point) {\n"
"        const deltaY = point.clientY - center.clientY;\n"
"        const deltaX = point.clientX - center.clientX;\n"
"        const angle = Math.atan2(deltaY, deltaX);\n"
"        return angle;\n"
"    }\n"
"\n"
"    // Function to rotate the circle\n"
"    function rotateCircle(event) {\n"
"        event.preventDefault();\n"
"        let touch = event;\n"
"        if (event.touches) {\n"
"            touch = event.touches[0];\n"
"        }\n"
"        if (isMouseDown) {\n"
"            const center = {\n"
"                clientX: circle.offsetLeft + circle.offsetWidth / 2,\n"
"                clientY: circle.offsetTop + circle.offsetHeight / 2\n"
"            };\n"
"            const angle = getAngle(center, touch);\n"
"            const rotation = angle - prevAngle;\n"
"            currentRotation += rotation;\n"
"            circle.style.transform = `rotate(${currentRotation}rad)`;\n"
"            prevAngle = angle;\n"
"        }\n"
"    }\n"
"\n"
"    // Event listeners for mouse down, move, and up\n"
"    circle.addEventListener('mousedown', (event) => {\n"
"        isMouseDown = true;\n"
"        const center = {\n"
"            clientX: circle.offsetLeft + circle.offsetWidth / 2,\n"
"            clientY: circle.offsetTop + circle.offsetHeight / 2\n"
"        };\n"
"        prevAngle = getAngle(center, event);\n"
"    });\n"
"\n"
"    document.addEventListener('mousemove', rotateCircle);\n"
"\n"
"    document.addEventListener('mouseup', () => {\n"
"        isMouseDown = false;\n"
"    });\n"
"\n"
"    // Event listeners for touch events\n"
"    circle.addEventListener('touchstart', (event) => {\n"
"        isMouseDown = true;\n"
"        const touch = event.touches[0];\n"
"        const center = {\n"
"            clientX: circle.offsetLeft + circle.offsetWidth / 2,\n"
"            clientY: circle.offsetTop + circle.offsetHeight / 2\n"
"        };\n"
"        prevAngle = getAngle(center, touch);\n"
"    });\n"
"\n"
"    document.addEventListener('touchmove', rotateCircle);\n"
"\n"
"    document.addEventListener('touchend', () => {\n"
"        isMouseDown = false;\n"
"    });\n"
"</script>\n"
"\n"
"</body>\n"
"</html>\n"
""
                      "";

#endif